/**
 * default ground state for skx
 * @author tweber@ill.fr
 * @date aug-18
 * @license GPLv2 (see 'LICENSE' file)
 */


#define __SKX_GS_VALS 1

/**
 * output from skx_gs.cpp
 * x values are the x (and y) imaginary components
 * y values are not used (same as x)
 * z values are the z real components
 */
static const std::vector<t_real> _skxgs_allcomps =
{{
#if __SKX_GS_VALS == 0
	// order 9, T_theo = -1000, B = Bc2/2, with hoc
	0, -0, 10.673187, // (0, 0)
	-5.8458962, 5.8458962, -5.4050312, // (1, 0)
	0.1113925, -0.1113925, 0.085667866, // (2, 0)
	-0.60882787, 0.60882787, -0.62874024, // (2, 1)
	0.093078489, -0.093078489, 0.091546677, // (3, 0)
	0.20289335, -0.20289335, 0.19019659, // (3, 1)
	0.20289441, -0.20289441, 0.19019506, // (3, 2)
	-0.012652798, 0.012652798, -0.011882318, // (4, 0)
	-0.0034348213, 0.0034348213, -0.0022923378, // (4, 1)
	0.0082958347, -0.0082958347, 0.009734816, // (4, 2)
	-0.0034367174, 0.0034367174, -0.0022950337, // (4, 3)
	-0.0008889495, 0.0008889495, -0.00089369061, // (5, 0)
	-0.0050701083, 0.0050701083, -0.0050030948, // (5, 1)
	-0.0082315961, 0.0082315961, -0.0080886266, // (5, 2)
	-0.0082326588, 0.0082326588, -0.0080895336, // (5, 3)
	-0.0050701989, 0.0050701989, -0.0050042726, // (5, 4)
	0.00047130879, -0.00047130879, 0.00035037344, // (6, 0)
	0.00067606029, -0.00067606029, 0.00059296599, // (6, 1)
	0.00045978649, -0.00045978649, 0.00037708437, // (6, 2)
	0.00024478455, -0.00024478455, 0.00017016702, // (6, 3)
	0.00046056393, -0.00046056393, 0.00037633961, // (6, 4)
	0.00067555556, -0.00067555556, 0.00059290203, // (6, 5)
	0.00010453178, -0.00010453178, -0.00010895114, // (7, 0)
	6.5791757e-05, -6.5791757e-05, -2.7445546e-06, // (7, 1)
	0.00027396295, -0.00027396295, 0.00020277261, // (7, 2)
	0.00043727857, -0.00043727857, 0.00037807749, // (7, 3)
	0.0004373706, -0.0004373706, 0.00037758111, // (7, 4)
	0.00027390366, -0.00027390366, 0.00020305605, // (7, 5)
	6.5886172e-05, -6.5886172e-05, -1.1140994e-06, // (7, 6)
	-4.2476325e-06, 4.2476325e-06, 2.9289212e-05, // (8, 0)
	5.0644973e-06, -5.0644973e-06, -2.0669281e-05, // (8, 1)
	-8.245482e-06, 8.245482e-06, -2.6228917e-05, // (8, 2)
	-8.744454e-06, 8.744454e-06, -1.9954174e-05, // (8, 3)
	-4.0319465e-06, 4.0319465e-06, -9.7596589e-06, // (8, 4)
	-8.9028709e-06, 8.9028709e-06, -2.0337e-05, // (8, 5)
	-7.5538022e-06, 7.5538022e-06, -2.5643569e-05, // (8, 6)
	5.8499151e-06, -5.8499151e-06, -2.0073452e-05, // (8, 7)
	7.6221221e-05, -7.6221221e-05, 4.7591783e-05, // (9, 0)
	7.7100334e-05, -7.7100334e-05, 5.492535e-05, // (9, 1)
	6.0406991e-05, -6.0406991e-05, 3.1373903e-05, // (9, 2)
	3.1131521e-05, -3.1131521e-05, 1.2457233e-05, // (9, 3)
	1.9329111e-05, -1.9329111e-05, 3.410342e-06, // (9, 4)
	1.9068216e-05, -1.9068216e-05, 3.1811242e-06, // (9, 5)
	3.0690866e-05, -3.0690866e-05, 1.2108678e-05, // (9, 6)
	6.010662e-05, -6.010662e-05, 3.1160461e-05, // (9, 7)
	7.693793e-05, -7.693793e-05, 5.4774539e-05, // (9, 8)

#elif __SKX_GS_VALS == 1
	// order 9, T_theo = -1000, B = Bc2/2, no hoc
	0, -0, 9.8536285, // (0, 0)
	-5.9738896, 5.9738896, -5.547496, // (1, 0)
	0.27072538, -0.27072538, 0.23981482, // (2, 0)
	-0.41558565, 0.41558565, -0.46023152, // (2, 1)
	0.070912496, -0.070912496, 0.071243971, // (3, 0)
	0.20565412, -0.20565412, 0.195627, // (3, 1)
	0.20565425, -0.20565425, 0.19562679, // (3, 2)
	-0.015545037, 0.015545037, -0.014997716, // (4, 0)
	-0.015882659, 0.015882659, -0.014579996, // (4, 1)
	-0.0080869285, 0.0080869285, -0.0060764754, // (4, 2)
	-0.015882794, 0.015882794, -0.014580429, // (4, 3)
	0.00054675037, -0.00054675037, 0.00045840984, // (5, 0)
	-0.0031214538, 0.0031214538, -0.0031638495, // (5, 1)
	-0.0069164282, 0.0069164282, -0.006845643, // (5, 2)
	-0.0069165664, 0.0069165664, -0.0068457847, // (5, 3)
	-0.0031216009, 0.0031216009, -0.0031639677, // (5, 4)
	0.00029090008, -0.00029090008, 0.00026572837, // (6, 0)
	0.00087849101, -0.00087849101, 0.00082999395, // (6, 1)
	0.0011998891, -0.0011998891, 0.0011280312, // (6, 2)
	0.0012464556, -0.0012464556, 0.0011640292, // (6, 3)
	0.0011998821, -0.0011998821, 0.0011281238, // (6, 4)
	0.0008785109, -0.0008785109, 0.00083008162, // (6, 5)
	-2.9140539e-05, 2.9140539e-05, -6.5412227e-05, // (7, 0)
	-5.229934e-05, 5.229934e-05, -5.9442019e-05, // (7, 1)
	7.5528281e-05, -7.5528281e-05, 6.0152009e-05, // (7, 2)
	0.00021326978, -0.00021326978, 0.0001985109, // (7, 3)
	0.00021328909, -0.00021328909, 0.00019854745, // (7, 4)
	7.5562075e-05, -7.5562075e-05, 6.0194828e-05, // (7, 5)
	-5.229065e-05, 5.229065e-05, -5.9449233e-05, // (7, 6)
	4.9287127e-06, -4.9287127e-06, 9.8321737e-06, // (8, 0)
	-4.509644e-06, 4.509644e-06, -9.8333893e-06, // (8, 1)
	-3.8555157e-05, 3.8555157e-05, -3.9036501e-05, // (8, 2)
	-6.7077621e-05, 6.7077621e-05, -6.2500214e-05, // (8, 3)
	-7.724192e-05, 7.724192e-05, -6.881577e-05, // (8, 4)
	-6.7105142e-05, 6.7105142e-05, -6.2521947e-05, // (8, 5)
	-3.8595892e-05, 3.8595892e-05, -3.9079964e-05, // (8, 6)
	-4.5405549e-06, 4.5405549e-06, -9.8557892e-06, // (8, 7)
	1.6998439e-05, -1.6998439e-05, 7.5905241e-06, // (9, 0)
	1.4585426e-05, -1.4585426e-05, 1.0637564e-05, // (9, 1)
	1.6572706e-05, -1.6572706e-05, 9.6829718e-06, // (9, 2)
	1.1992201e-05, -1.1992201e-05, 6.3580977e-06, // (9, 3)
	7.7773694e-06, -7.7773694e-06, 2.6634358e-06, // (9, 4)
	7.7704757e-06, -7.7704757e-06, 2.6592036e-06, // (9, 5)
	1.1980417e-05, -1.1980417e-05, 6.346702e-06, // (9, 6)
	1.6566827e-05, -1.6566827e-05, 9.6781797e-06, // (9, 7)
	1.4590937e-05, -1.4590937e-05, 1.0642349e-05, // (9, 8)

#elif __SKX_GS_VALS == 2
	// order 9, T_theo = -1000, B = 25
	0, -0, 10.663612,
	-5.847046, 5.847046, -5.407236,
	0.11348549, -0.11348549, 0.087335309,
	-0.60664435, 0.60664435, -0.62706161,
	0.093072501, -0.093072501, 0.091462812,
	0.20331025, -0.20331025, 0.1905029,
	0.20331054, -0.20331054, 0.19050289,
	-0.01265011, 0.01265011, -0.011924111,
	-0.0035164938, 0.0035164938, -0.0023639852,
	0.0082018002, -0.0082018002, 0.0096875741,
	-0.0035165232, 0.0035165232, -0.0023639326,
	-0.00087481324, 0.00087481324, -0.00091285628,
	-0.005050952, 0.005050952, -0.0049751837,
	-0.0082436307, 0.0082436307, -0.0079855657,
	-0.0082435857, 0.0082435857, -0.0079854898,
	-0.0050507636, 0.0050507636, -0.0049750991,
	0.00037523503, -0.00037523503, 0.00040145854,
	0.00062865991, -0.00062865991, 0.00061754722,
	0.00044467214, -0.00044467214, 0.0004048573,
	0.00025350958, -0.00025350958, 0.00020829956,
	0.00044474497, -0.00044474497, 0.00040484586,
	0.00062861349, -0.00062861349, 0.00061756619,
	-7.1472901e-05, 7.1472901e-05, -1.0047099e-05,
	4.8486499e-05, -4.8486499e-05, 7.123637e-05,
	0.0002123971, -0.0002123971, 0.00023158625,
	0.00034647227, -0.00034647227, 0.00035750673,
	0.00034646731, -0.00034646731, 0.00035746966,
	0.00021238693, -0.00021238693, 0.00023160892,
	4.8518035e-05, -4.8518035e-05, 7.1340362e-05,
	-9.6859981e-06, 9.6859981e-06, -1.66664e-05,
	-3.5903167e-05, 3.5903167e-05, -2.5178535e-05,
	-4.9448774e-05, 4.9448774e-05, -3.7375692e-05,
	-4.4673667e-05, 4.4673667e-05, -3.3446092e-05,
	-3.8558908e-05, 3.8558908e-05, -2.8912801e-05,
	-4.4703806e-05, 4.4703806e-05, -3.3476637e-05,
	-4.9404505e-05, 4.9404505e-05, -3.7350365e-05,
	-3.587342e-05, 3.587342e-05, -2.5149213e-05,
	-1.9299362e-05, 1.9299362e-05, -1.1353794e-05,
	-1.921981e-05, 1.921981e-05, -1.3578188e-05,
	-1.9421166e-05, 1.9421166e-05, -1.2134935e-05,
	-2.1062548e-05, 2.1062548e-05, -1.5478968e-05,
	-2.6130461e-05, 2.6130461e-05, -1.9767701e-05,
	-2.6151904e-05, 2.6151904e-05, -1.9781336e-05,
	-2.1095461e-05, 2.1095461e-05, -1.5505212e-05,
	-1.9438456e-05, 1.9438456e-05, -1.2150978e-05,
	-1.9220777e-05, 1.9220777e-05, -1.3579722e-05,

#elif __SKX_GS_VALS == 3
	// order 7, T_theo = -1250
	0, -0, 11.018925, // (0, 0)
	-6.6801587, 6.6801587, -6.2005005, // (1, 0)
	0.30333698, -0.30333698, 0.26631459, // (2, 0)
	-0.46497044, 0.46497044, -0.51455339, // (2, 1)
	0.077814931, -0.077814931, 0.076393767, // (3, 0)
	0.22983327, -0.22983327, 0.21849224, // (3, 1)
	0.22953902, -0.22953902, 0.21851281, // (3, 2)
	-0.018844354, 0.018844354, -0.018817961, // (4, 0)
	-0.01777432, 0.01777432, -0.01606932, // (4, 1)
	-0.0069456114, 0.0069456114, -0.0031102541, // (4, 2)
	-0.017846361, 0.017846361, -0.016065301, // (4, 3)
	2.0912856e-05, -2.0912856e-05, 4.2293002e-06, // (5, 0)
	-0.0038137819, 0.0038137819, -0.0039261517, // (5, 1)
	-0.0064044768, 0.0064044768, -0.0058237692, // (5, 2)
	-0.0064117636, 0.0064117636, -0.0059226419, // (5, 3)
	-0.0040160869, 0.0040160869, -0.00392658, // (5, 4)
	0.00058645388, -0.00058645388, 0.00044603187, // (6, 0)
	0.00085580611, -0.00085580611, 0.0008499052, // (6, 1)
	0.0012965366, -0.0012965366, 0.0010441086, // (6, 2)
	0.0014099115, -0.0014099115, 0.0011645359, // (6, 3)
	0.0011383211, -0.0011383211, 0.00099232301, // (6, 4)
	0.00098419996, -0.00098419996, 0.0008750875, // (6, 5)
	-4.8185846e-05, 4.8185846e-05, -5.0091498e-05, // (7, 0)
	5.930487e-05, -5.930487e-05, 6.6867197e-05, // (7, 1)
	3.217449e-05, -3.217449e-05, 4.7954668e-05, // (7, 2)
	-8.7921117e-05, 8.7921117e-05, -4.5066966e-05, // (7, 3)
	-9.4370424e-05, 9.4370424e-05, -6.2059127e-05, // (7, 4)
	-3.8420351e-05, 3.8420351e-05, -1.1745715e-05, // (7, 5)
	-5.967369e-06, 5.967369e-06, -4.4703804e-05, // (7, 6)

#elif __SKX_GS_VALS == 4
	// order 7, T_theo = -750
	0, -0, 8.4243411, // (0, 0)
	-5.1882779, 5.1882779, -4.8221582, // (1, 0)
	0.25631346, -0.25631346, 0.22802881, // (2, 0)
	-0.33563884, 0.33563884, -0.37498915, // (2, 1)
	0.057342741, -0.057342741, 0.057330129, // (3, 0)
	0.17800525, -0.17800525, 0.16915649, // (3, 1)
	0.17800527, -0.17800527, 0.16915649, // (3, 2)
	-0.013803452, 0.013803452, -0.01305877, // (4, 0)
	-0.015299865, 0.015299865, -0.014450856, // (4, 1)
	-0.0088224133, 0.0088224133, -0.0075278302, // (4, 2)
	-0.015299849, 0.015299849, -0.014450856, // (4, 3)
	0.001075233, -0.001075233, 0.00062665614, // (5, 0)
	-0.0021909247, 0.0021909247, -0.0020918757, // (5, 1)
	-0.0054155161, 0.0054155161, -0.0053301603, // (5, 2)
	-0.0054155091, 0.0054155091, -0.0053301553, // (5, 3)
	-0.0021909184, 0.0021909184, -0.002091869, // (5, 4)
	4.0128885e-05, -4.0128885e-05, 6.6579299e-06, // (6, 0)
	0.00054721579, -0.00054721579, 0.00067201527, // (6, 1)
	0.0013893517, -0.0013893517, 0.0011137654, // (6, 2)
	0.0013913236, -0.0013913236, 0.0011497676, // (6, 3)
	0.0013893583, -0.0013893583, 0.0011137753, // (6, 4)
	0.00054721997, -0.00054721997, 0.00067201844, // (6, 5)
	-0.00020071951, 0.00020071951, -6.6436057e-05, // (7, 0)
	6.757063e-05, -6.757063e-05, -3.3348097e-05, // (7, 1)
	5.6304219e-05, -5.6304219e-05, 6.7168998e-05, // (7, 2)
	2.7082939e-05, -2.7082939e-05, 3.7673416e-05, // (7, 3)
	2.7092925e-05, -2.7092925e-05, 3.7675732e-05, // (7, 4)
	5.6302614e-05, -5.6302614e-05, 6.7170953e-05, // (7, 5)
	6.7568937e-05, -6.7568937e-05, -3.3349919e-05, // (7, 6)
#endif
}};


template<class t_vec_cplx>
std::vector<t_vec_cplx> _get_skx_gs()
{
	using t_cplx = typename t_vec_cplx::value_type;
	constexpr auto imag = t_cplx(0, 1);

	// set initial fourier components
	std::vector<t_vec_cplx> fourier;
	fourier.reserve(_skxgs_allcomps.size()/3);

	for(std::size_t comp=0; comp<_skxgs_allcomps.size(); comp+=3)
	{
		fourier.emplace_back(tl2::make_vec<t_vec_cplx>(
		{
			_skxgs_allcomps[comp] * imag,
			_skxgs_allcomps[comp+1] * imag,
			_skxgs_allcomps[comp+2]
		}));
	}

	return fourier;
}
